CREATE DATABASE DB_CARER_YOU CHARACTER SET = 'UTF8MB4' COLLATE = 'UTF8MB4_GENERAL_CI';
USE DB_CARER_YOU;

CREATE TABLE IF NOT EXISTS TB_UF
(
	SG_UF CHAR(2) NOT NULL,
    NM_UF VARCHAR(50) NOT NULL,
    CONSTRAINT PK_UF
		PRIMARY KEY(SG_UF)
)
ENGINE = InnoDB;

INSERT INTO TB_UF VALUES
('SP','São Paulo');

CREATE TABLE IF NOT EXISTS TB_CIDADE
(
	ID_CIDADE INT NOT NULL AUTO_INCREMENT,
    SG_UF CHAR(2) NOT NULL,
    NM_CIDADE VARCHAR(50) NOT NULL,
    CONSTRAINT FK_CIDADE_UF
		FOREIGN KEY(SG_UF)
			REFERENCES TB_UF(SG_UF)
				ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT PK_CIDADE
		PRIMARY KEY(ID_CIDADE)
)
ENGINE = InnoDB;

INSERT INTO TB_CIDADE VALUES
(DEFAULT,'SP','Santos'),
(DEFAULT,'SP','São Vicente');

CREATE TABLE IF NOT EXISTS TB_ENDERECO
(
	ID_ENDERECO INT NOT NULL AUTO_INCREMENT,
    ID_CIDADE INT NOT NULL,
    NM_BAIRRO VARCHAR(50) NOT NULL,
    DS_ENDERECO VARCHAR(100) NOT NULL,
    CONSTRAINT FK_ENDERECO_CIDADE
		FOREIGN KEY(ID_CIDADE)
			REFERENCES TB_CIDADE(ID_CIDADE)
				ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT PK_ENDERECO
		PRIMARY KEY(ID_ENDERECO)
)
ENGINE = InnoDB;
INSERT INTO TB_ENDERECO VALUES
(DEFAULT,2,'Catiapoã','Rua do Catiapoã, 123'),
(DEFAULT,2,'Parque Bitaru', 'Rua do Bitaru, 111'),
(DEFAULT,1,'Zona Norte','Rua da Zona Norte, 222'),
(DEFAULT,1,'Zona Norte','Rua das azaléias, 133');

CREATE VIEW VW_ENDERECO (ESTADO,CIDADE,BAIRRO,ENDERECO) AS 
SELECT UF.NM_UF, CID.NM_CIDADE, EN.NM_BAIRRO, EN.DS_ENDERECO 
	FROM TB_ENDERECO AS EN INNER JOIN TB_CIDADE AS CID 
		ON (EN.ID_CIDADE = CID.ID_CIDADE)
			INNER JOIN TB_UF AS UF 
				ON (CID.SG_UF =UF.SG_UF);

SELECT * FROM VW_ENDERECO;

CREATE TABLE IF NOT EXISTS TB_LOCAL
(
	ID_LOCAL INT NOT NULL AUTO_INCREMENT,
    ID_ENDERECO INT,
    NM_LOCAL VARCHAR(50) NOT NULL,
    DS_LOCAL VARCHAR(2000) DEFAULT 'Local registrado no sistema Carer You',
    NM_IMG_LOCAL VARCHAR(100) NOT NULL,
    CONSTRAINT FK_LOCAL_ENDERECO
		FOREIGN KEY(ID_ENDERECO)
			REFERENCES TB_ENDERECO(ID_ENDERECO)
				ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT PK_LOCAL
		PRIMARY KEY(ID_LOCAL)
)
ENGINE = InnoDB;
INSERT INTO TB_LOCAL VALUES
(DEFAULT,1,'Casa de repouso Catiapoã','Venha conhecer nossa casa de repouso','image.png'),
(DEFAULT,2,'Casa de repouso Bitaru','Venha conhecer nossa casa de repouso','image.png'),
(DEFAULT,3,'Casa da repouso Zona Norte','Venha conhecer nossa casa de repouso','image.png');

CREATE VIEW VW_LOCAL(NOME_LOCAL, DESCRICAO, ESTADO, CIDADE, BAIRRO, ENDERECO) AS
SELECT LOC.NM_LOCAL, LOC.DS_LOCAL, UF.NM_UF, CID.NM_CIDADE, EN.NM_BAIRRO, EN.DS_ENDERECO
FROM TB_LOCAL AS LOC INNER JOIN TB_ENDERECO AS EN ON (LOC.ID_ENDERECO = EN.ID_ENDERECO)
INNER JOIN TB_CIDADE AS CID ON (EN.ID_CIDADE = CID.ID_CIDADE)
INNER JOIN TB_UF AS UF ON (CID.SG_UF = UF.SG_UF);

select * from VW_LOCAL;

CREATE TABLE IF NOT EXISTS TB_TIPO_CONTATO
(
	ID_TIPO_CONTATO INT NOT NULL AUTO_INCREMENT,
    DS_TIPO_CONTATO VARCHAR(50) NOT NULL,
    CONSTRAINT UNIQUE_TIPO_CONTATO
		UNIQUE KEY(DS_TIPO_CONTATO),
	CONSTRAINT PK_TIPO_CONTATO
		PRIMARY KEY(ID_TIPO_CONTATO)
)
ENGINE = InnoDB;
INSERT INTO TB_TIPO_CONTATO VALUES
(DEFAULT,'Teleffone'),
(DEFAULT,'E-Mail'),
(DEFAULT,'Whatsapp');

CREATE TABLE IF NOT EXISTS TB_PERGUNTAS
(
	ID_PERGUNTA INT NOT NULL AUTO_INCREMENT,
    DS_TITULO_PERGUNTA VARCHAR(50),
    DS_PERGUNTA VARCHAR(760) NOT NULL,
    QTD_PERGUNTA INT NOT NULL DEFAULT 1,
    CONSTRAINT UNIQUE_PERGUNTA
		UNIQUE KEY(DS_PERGUNTA),
	CONSTRAINT PK_PERGUNTA
		PRIMARY KEY(ID_PERGUNTA)
)
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS TB_TIPO_USUARIO
(
	ID_TIPO_USUARIO INT NOT NULL AUTO_INCREMENT,
    DS_TIPO_USUARIO VARCHAR(50) NOT NULL,
    CONSTRAINT UNIQUE_TIPO_USUARIO
		UNIQUE KEY(DS_TIPO_USUARIO),
	CONSTRAINT PK_TIPO_USUARIO
		PRIMARY KEY(ID_TIPO_USUARIO)
)
ENGINE = InnoDB;
INSERT INTO TB_TIPO_USUARIO VALUES
(DEFAULT,'Cliente'),
(DEFAULT,'Profissional'),
(DEFAULT,'Admin');

CREATE TABLE IF NOT EXISTS TB_GENERO_USUARIO
(
	ID_GENERO_USUARIO INT NOT NULL AUTO_INCREMENT,
    DS_GENERO_USUARIO VARCHAR(50) NOT NULL,
    CONSTRAINT UNIQUE_GENERO_USUARIO
		UNIQUE KEY(DS_GENERO_USUARIO),
	CONSTRAINT PK_GENERO_USUARIO
		PRIMARY KEY(ID_GENERO_USUARIO)
)
ENGINE = InnoDB;

INSERT INTO TB_GENERO_USUARIO VALUES
(DEFAULT,'Masculino'),
(DEFAULT,'Feminino'),
(DEFAULT,'Outro'),
(DEFAULT,'Prefiro não dizer');

CREATE TABLE IF NOT EXISTS TB_STATUS_USUARIO
(
	ID_STATUS_USUARIO INT NOT NULL AUTO_INCREMENT,
    DS_STATUS_USUARIO VARCHAR(50) NOT NULL,
    CONSTRAINT UNIQUE_STATUS_USUARIO
		UNIQUE KEY(DS_STATUS_USUARIO),
	CONSTRAINT PK_STATUS_USUARIO
		PRIMARY KEY(ID_STATUS_USUARIO)
)
ENGINE = InnoDB;
INSERT INTO TB_STATUS_USUARIO VALUES
(DEFAULT,'Ativo'),
(DEFAULT,'Inativo');

CREATE TABLE IF NOT EXISTS TB_USUARIO
(
	ID_USUARIO INT NOT NULL AUTO_INCREMENT,
    ID_TIPO_USUARIO INT,
    ID_GENERO_USUARIO INT,
    NM_USUARIO VARCHAR(50) NOT NULL,
    DS_EMAIL VARCHAR(100) NOT NULL,
    DS_SENHA VARCHAR(255) NOT NULL,
    NM_IMG_PERFIL VARCHAR(300) NOT NULL,
    CD_RG VARCHAR(30) NOT NULL,
    ID_STATUS_USUARIO INT DEFAULT 1,
    CONSTRAINT FK_USUARIO_STATUS_USUARIO
		FOREIGN KEY(ID_STATUS_USUARIO)
			REFERENCES TB_STATUS_USUARIO(ID_STATUS_USUARIO)
				ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT FK_USUARIO_TIPO_USUARIO
		FOREIGN KEY(ID_TIPO_USUARIO)
			REFERENCES TB_TIPO_USUARIO(ID_TIPO_USUARIO)
				ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT FK_GENERO_USUARIO
		FOREIGN KEY(ID_GENERO_USUARIO)
			REFERENCES TB_GENERO_USUARIO(ID_GENERO_USUARIO)
				ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT UNIQUE_EMAIL
			UNIQUE KEY(DS_EMAIL),
	CONSTRAINT PK_USUARIO
		PRIMARY KEY(ID_USUARIO)
)
ENGINE = InnoDB;

INSERT INTO TB_USUARIO VALUES
(DEFAULT,3,1,'Anderson Portes','andersonportes@email.com','senha_forte','imagem.png','12.345.678.90',1),
(DEFAULT,1,2,'Maithê Gomes','maithegomes@email.com','senha_da_maithe','maithe.png','34.678.567.67', 2),
(DEFAULT,2,4,'Alex Aparecido','alexaparecido@email.com','senha_do_alex','alex.png','34.675.546.45', 1);

CREATE VIEW VW_USUARIOS (ID, TIPO, GENERO, NOME, EMAIL, STATUS) AS
SELECT US.ID_USUARIO, TP_US.DS_TIPO_USUARIO, GEN.DS_GENERO_USUARIO, US.NM_USUARIO, US.DS_EMAIL, STTS.DS_STATUS_USUARIO
FROM TB_USUARIO AS US INNER JOIN TB_GENERO_USUARIO AS GEN ON (US.ID_GENERO_USUARIO = GEN.ID_GENERO_USUARIO)
INNER JOIN TB_TIPO_USUARIO AS TP_US ON (US.ID_TIPO_USUARIO = TP_US.ID_TIPO_USUARIO)
INNER JOIN TB_STATUS_USUARIO AS STTS ON (US.ID_STATUS_USUARIO = STTS.ID_STATUS_USUARIO);

SELECT * FROM VW_USUARIOS;

CREATE TABLE IF NOT EXISTS TB_CONTATO_USUARIO
(
	ID_CONTATO_USUARIO INT NOT NULL AUTO_INCREMENT,
    ID_USUARIO INT NOT NULL,
    ID_TIPO_CONTATO INT,
    DS_CONTATO VARCHAR(50) NOT NULL,
    CONSTRAINT FK_CONTATO_USUARIO_TIPO_CONTATO
		FOREIGN KEY(ID_TIPO_CONTATO)
			REFERENCES TB_TIPO_CONTATO(ID_TIPO_CONTATO)
				ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT FK_CONTATO_USUARIO_USUARIO
		FOREIGN KEY(ID_USUARIO)
			REFERENCES TB_USUARIO(ID_USUARIO)
				ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT PK_CONTATO_USUARIO
		PRIMARY KEY(ID_CONTATO_USUARIO)
)
ENGINE = InnoDB;
INSERT INTO TB_CONTATO_USUARIO VALUES
(DEFAULT,1,2,'andersoncontato@email.com'),
(DEFAULT,2,3,'13 99671-4890'),
(DEFAULT,3,1,'3378-5678');

CREATE VIEW VW_CONTATOS_USUARIO (NOME, RG, TIPO, CONTATO) AS
SELECT US.NM_USUARIO, US.CD_RG, CTT.DS_TIPO_CONTATO, CTTUS.DS_CONTATO
FROM TB_CONTATO_USUARIO AS CTTUS INNER JOIN TB_USUARIO AS US ON (CTTUS.ID_USUARIO = US.ID_USUARIO)
INNER JOIN TB_TIPO_CONTATO AS CTT ON (CTTUS.ID_TIPO_CONTATO = CTT.ID_TIPO_CONTATO);

SELECT * FROM VW_CONTATOS_USUARIO;

CREATE TABLE IF NOT EXISTS TB_USUARIO_PROFISSIONAL
(
	ID_USUARIO_PROFISSIONAL INT NOT NULL AUTO_INCREMENT,
    ID_USUARIO INT,
    NM_CERTIFICAO_USUARIO VARCHAR(300) NOT NULL,
    DS_PERFIL_PROFISSIONAL VARCHAR(2000) DEFAULT 'Profissional do sistema Carer You',
    CONSTRAINT FK_USUARIO_PROFISSIONAL_USUARIO
		FOREIGN KEY(ID_USUARIO)
			REFERENCES TB_USUARIO(ID_USUARIO)
				ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT UNIQUE_ID_PROFISSIONAL
		UNIQUE KEY(ID_USUARIO),
	CONSTRAINT PK_USUARIO_PROFISSIONAL
		PRIMARY KEY(ID_USUARIO_PROFISSIONAL)
)
ENGINE = InnoDB;
INSERT INTO TB_USUARIO_PROFISSIONAL VALUES
(DEFAULT, 3,'certificado_alex.pdf','Pefil profissional do cuidador de idoso Alex Aparecido de Lima');

CREATE VIEW VW_PERFIL_PROFISSIONAL (NOME, EMAIL, CERTIFICADO, DESCRICAO, CONTATO) AS
SELECT US.NM_USUARIO , US.DS_EMAIL, PRF.NM_CERTIFICAO_USUARIO, PRF.DS_PERFIL_PROFISSIONAL ,CTT.DS_CONTATO
FROM TB_USUARIO_PROFISSIONAL AS PRF INNER JOIN TB_USUARIO AS US ON (PRF.ID_USUARIO = US.ID_USUARIO)
INNER JOIN TB_CONTATO_USUARIO AS CTT ON (US.ID_USUARIO = CTT.ID_USUARIO);

SELECT * FROM VW_PERFIL_PROFISSIONAL;

CREATE TABLE IF NOT EXISTS TB_DENUNCIA
(
	ID_DENUNCIA INT NOT NULL AUTO_INCREMENT,
    ID_DESTINO_DENUNCIA INT,
    ID_ORIGEM_DENUNCIA INT,
    DS_DENUNCIA VARCHAR(1000) NOT NULL,
    DT_DENUNCIA DATETIME DEFAULT NOW(),
    CONSTRAINT FK_DESTINO_DENUNCIA_USUARIO
		FOREIGN KEY(ID_DESTINO_DENUNCIA)
			REFERENCES TB_USUARIO(ID_USUARIO)
				ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT FK_ORIGEM_DENUNCIA_USUARIO
		FOREIGN KEY(ID_ORIGEM_DENUNCIA)
			REFERENCES TB_USUARIO(ID_USUARIO)
				ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT PK_DENUNCIA
		PRIMARY KEY(ID_DENUNCIA)
)
ENGINE = InnoDB;
INSERT INTO TB_DENUNCIA VALUES 
(DEFAULT,2,1,'Usuario cometendo crimes dentro do sistema', DEFAULT);

CREATE VIEW VW_DENUNCIA (NOME_DENUNCIADO, EMAIL_DENUNCIADO, TIPO_USUARIO,  GENERO_DENUNCIADO, ID_ORIGEM_DENUNCIA, DESCRICAO, DATA) AS
SELECT US.NM_USUARIO, US.DS_EMAIL, TP_US.DS_TIPO_USUARIO, GEN.DS_GENERO_USUARIO,  DEN.ID_ORIGEM_DENUNCIA, DEN.DS_DENUNCIA, DEN.DT_DENUNCIA
FROM TB_DENUNCIA AS DEN INNER JOIN TB_USUARIO AS US ON (DEN.ID_DESTINO_DENUNCIA = US.ID_USUARIO)
INNER JOIN TB_TIPO_USUARIO AS TP_US ON (US.ID_TIPO_USUARIO = TP_US.ID_TIPO_USUARIO)
INNER JOIN TB_GENERO_USUARIO AS GEN ON(US.ID_GENERO_USUARIO = GEN.ID_GENERO_USUARIO);

SELECT * FROM VW_DENUNCIA;

CREATE TABLE IF NOT EXISTS TB_MENSAGEM
(
	ID_MENSAGEM INT NOT NULL AUTO_INCREMENT,
    ID_DESTINO_MENSAGEM INT,
    ID_ORIGEM_MENSAGEM INT,
    DS_MENSAGEM VARCHAR(500),
    CONSTRAINT FK_MENSAGEM_DESTINO_USUARIO
		FOREIGN KEY(ID_DESTINO_MENSAGEM)
			REFERENCES TB_USUARIO(ID_USUARIO)
				ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT FK_MENSAGEM_ORIGEM_USUARIO
		FOREIGN KEY(ID_ORIGEM_MENSAGEM)
			REFERENCES TB_USUARIO(ID_USUARIO)
				ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT PK_MENSAGEM
		PRIMARY KEY(ID_MENSAGEM)
)
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS TB_PEDIDO_SERVICO
(
	ID_PEDIDO_SERVICO INT NOT NULL AUTO_INCREMENT,
    ID_USUARIO INT,
    ID_PROFISSIONAL INT,
    DT_SERVICO DATE NOT NULL,
    HORARIO_INICIO_SERVICO TIME NOT NULL,
    HORARIO_FIM_SERVICO TIME NOT NULL,
    DT_REQUISICAO_SERVICO DATETIME DEFAULT NOW(),
    VL_SERVICO DECIMAL(4,2) NOT NULL,
    DS_SERVICO VARCHAR(2000) NOT NULL,
    ID_ENDERECO_SERVICO INT,
    CONSTRAINT FK_PEDIDO_SERVICO_ENDERECO
		FOREIGN KEY(ID_ENDERECO_SERVICO)
			REFERENCES TB_ENDERECO(ID_ENDERECO)
				ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT FK_PEDIDO_SERVICO_USUARIO
		FOREIGN KEY(ID_USUARIO)
			REFERENCES TB_USUARIO(ID_USUARIO)
				ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT FK_PEDIDO_SERVICO_USUARIO_PROFISSIONAL
		FOREIGN KEY(ID_PROFISSIONAL)
			REFERENCES TB_USUARIO_PROFISSIONAL(ID_USUARIO_PROFISSIONAL)
				ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT PK_PEDIDO_SERVICO
		PRIMARY KEY(ID_PEDIDO_SERVICO)
)
ENGINE = InnoDB;

INSERT INTO TB_PEDIDO_SERVICO VALUES
(DEFAULT,2,1,'2022-02-27','12:00','18:00',DEFAULT,90.00,'Preciso de ajuda para cuidador do meu avô obs: problemas com digestão',4);


CREATE VIEW VW_SERVICOS (ID_SERVICO, USUARIO, GENERO, ID_PROFISSIONAL, DATA_SERVICO, VALOR, ESTADO, CIDADE, BAIRRO, ENDERECO) AS
SELECT PED.ID_PEDIDO_SERVICO, US.NM_USUARIO, GEN.DS_GENERO_USUARIO, PED.ID_PROFISSIONAL, PED.DT_SERVICO, PED.VL_SERVICO, UF.NM_UF,   CID.NM_CIDADE, EN.NM_BAIRRO, EN.DS_ENDERECO
FROM TB_PEDIDO_SERVICO AS PED INNER JOIN TB_USUARIO AS US ON (PED.ID_USUARIO = US.ID_USUARIO)
INNER JOIN TB_GENERO_USUARIO AS GEN ON (US.ID_GENERO_USUARIO = GEN.ID_GENERO_USUARIO)
INNER JOIN TB_ENDERECO AS EN ON (PED.ID_ENDERECO_SERVICO = EN.ID_ENDERECO)
INNER JOIN TB_CIDADE AS CID ON (EN.ID_CIDADE = CID.ID_CIDADE)
INNER JOIN TB_UF AS UF ON (CID.SG_UF = UF.SG_UF); 

SELECT * FROM VW_SERVICOS;

